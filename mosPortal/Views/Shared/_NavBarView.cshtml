@using mosPortal.Models
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="" asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="navbar-right">
    <ul class="nav navbar-nav navbar-right ">

        <li class="dropdown">
            <a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="fa fa-user"></i> @UserManager.GetUserName(User) <b class="caret"></b></a>
            <ul class="dropdown-menu">
                <li>
                    <a href="#"><i class="fa fa-fw fa-user"></i> Profile</a>
                </li>
                @if ((await AuthorizationService.AuthorizeAsync(User, "AllAdministrationRoles")).Succeeded)
                {
                    <li>
                        <a asp-area="" asp-action="Index" asp-controller="Administration"><i class="fa fa-fw fa-cogs"></i>Verwaltung</a>
                    </li>
                }
                <li class="divider"></li>
                <li>
                    <a href="#" onclick="document.getElementById('logoutForm').submit();"><i class="fa fa-fw fa-power-off"></i> Log Out</a>
                </li>
            </ul>
        </li>
    </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a id="btnShowModalLogin" asp-area="" asp-action="Login" asp-controller="Account" asp-route-returnUrl="@ViewData["ReturnUrl"]" data-target="#modal" data-toggle="modal">Login</a></li>
    </ul>
}
<ul class="nav navbar-nav navbar-right">
    <li>
        <a asp-area="" asp-controller="Home" asp-action="ShowConcerns">Anliegen</a>
    </li>
    <li>
        <a asp-area="" asp-controller="Home" asp-action="ShowPolls">Umfragen</a>
    </li>

</ul>
